{"version":3,"sources":["components/assets/logo.png","components/assets/cardE.png","components/assets/cardR.png","components/Card.jsx","components/Level.jsx","components/.vscode/constants.js","components/Easymode.jsx","components/GameBoard.jsx","components/Home.jsx","components/ModalRules.jsx","components/assets/Baniere.png","components/assets/BaniereRomain.png","components/assets/BaniereEgypte.png","components/Header.jsx","components/EndPage.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Card","imageUrl","id","setFirstCardClicked","setSecondCardClicked","firstCardClicked","sideSelect","pairCount","React","useState","isVisible","setIsVisible","cardSelectMap","1","cardR","2","cardE","changeState","useEffect","className","role","tabIndex","onKeyDown","onClick","src","alt","defaultProps","undefined","Level","urlSearch","setCurrentPairCount","currentPairCount","secondCardClicked","slice","setTimeout","imageList","setImageList","fetch","then","response","json","data","pairs","results","reduce","acc","image","sort","Math","random","map","urls","thumb","Easymode","setPairCount","GameBoard","setGameBoard","setEndPageIsDisplayed","nexttLevel","type","Home","setSideSelect","gameBoard","buttonRomanClicked","setButtonRomanClicked","buttonEgyptClicked","setButtonEgyptClicked","onChange","e","parseInt","target","value","alert","ModalRules","children","isOpened","setIsOpened","aria-label","Header","logo","baniereSelectMap","BaniereRomain","BaniereEgypte","goHomePageButton","BaniereDefault","EndPage","href","rel","App","endPageIsDisplayed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb6aa5f9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f33279a6.png\";","export default __webpack_public_path__ + \"static/media/cardE.2b295aea.png\";","export default __webpack_public_path__ + \"static/media/cardR.7ade8f16.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Css/Card.css';\nimport cardE from './assets/cardE.png';\nimport cardR from './assets/cardR.png';\n\nconst Card = ({\n  imageUrl, id, setFirstCardClicked, setSecondCardClicked,\n  firstCardClicked, sideSelect, pairCount,\n}) => {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const cardSelectMap = {\n    1: cardR,\n    2: cardE,\n  };\n  function changeState() {\n    if (isVisible === false) {\n      setIsVisible(!isVisible);\n      if (firstCardClicked != null) {\n        setSecondCardClicked({\n          id, setIsVisible,\n        });\n      } else {\n        setFirstCardClicked({\n          id, setIsVisible,\n        });\n      }\n    }\n  }\n  React.useEffect(() => {\n    setIsVisible(false);\n  }, [pairCount]);\n\n  return (\n    <div\n      className=\"card-container\"\n      role=\"button\"\n      tabIndex=\"-1\"\n      onKeyDown={changeState}\n      onClick={!isVisible ? changeState : null}\n    >\n      <img\n        className=\"card\"\n        src={isVisible ? imageUrl : cardSelectMap[sideSelect]}\n        alt=\"\"\n      />\n    </div>\n  );\n};\nCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  setFirstCardClicked: PropTypes.func.isRequired,\n  setSecondCardClicked: PropTypes.func.isRequired,\n  firstCardClicked: PropTypes.string,\n  sideSelect: PropTypes.number.isRequired,\n  pairCount: PropTypes.number.isRequired,\n\n};\nCard.defaultProps = {\n  firstCardClicked: undefined,\n};\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { tokenApi } from './.vscode/constants';\nimport Card from './Card';\n\nfunction Level({\n  pairCount, sideSelect, urlSearch, setCurrentPairCount, currentPairCount,\n}) {\n  const [firstCardClicked, setFirstCardClicked] = React.useState();\n  const [secondCardClicked, setSecondCardClicked] = React.useState();\n\n  React.useEffect(() => {\n    if (firstCardClicked != null && secondCardClicked != null) {\n      if (firstCardClicked.id.slice(0, -2) === secondCardClicked.id.slice(0, -2)) {\n        setCurrentPairCount(currentPairCount + 1);\n      } else {\n        setTimeout(() => firstCardClicked.setIsVisible(false), 500);\n        setTimeout(() => secondCardClicked.setIsVisible(false), 500);\n      }\n      setFirstCardClicked(null);\n      setSecondCardClicked(null);\n    }\n  }, [firstCardClicked, secondCardClicked]);\n  const [imageList, setImageList] = React.useState([]);\n  React.useEffect(() => {\n    fetch(`https://api.unsplash.com/search/photos/?client_id=${tokenApi}&query=${urlSearch}&orientation=portrait&per_page=${pairCount}`)\n      .then((response) => response.json())\n      .then((data) => {\n        const pairs = data.results.reduce((acc, image) => {\n          const { id } = image;\n          return [\n            ...acc,\n            { ...image, id: `${id}a` },\n            { ...image, id: `${id}b` },\n          ];\n        }, []);\n\n        pairs.sort(() => Math.random() - 0.5);\n        setImageList(pairs);\n      });\n  }, [pairCount]);\n\n  return (\n    <>\n      {\n         imageList.map((image) => (\n           <Card\n             key={image.id}\n             imageUrl={image.urls.thumb}\n             id={image.id}\n             firstCardClicked={firstCardClicked}\n             setFirstCardClicked={setFirstCardClicked}\n             setSecondCardClicked={setSecondCardClicked}\n             sideSelect={sideSelect}\n             pairCount={pairCount}\n\n           />\n         ))\n     }\n    </>\n  );\n}\nLevel.propTypes = {\n  pairCount: PropTypes.number.isRequired,\n  sideSelect: PropTypes.number.isRequired,\n  urlSearch: PropTypes.string.isRequired,\n  setCurrentPairCount: PropTypes.func.isRequired,\n  currentPairCount: PropTypes.number.isRequired,\n};\nexport default Level;\n","const tokenApi = '8w1Lc-VTX7CuEXNQ5Qo48_US7I2WOy-3is4sizxVtKQ';\n\nexport {tokenApi};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Level from './Level';\n\nfunction Easymode({\n  sideSelect, urlSearch, pairCount, setCurrentPairCount, currentPairCount, setPairCount,\n}) {\n  return (\n    <>\n      <Level\n        pairCount={pairCount}\n        sideSelect={sideSelect}\n        urlSearch={urlSearch}\n        setCurrentPairCount={setCurrentPairCount}\n        currentPairCount={currentPairCount}\n        setPairCount={setPairCount}\n      />\n    </>\n  );\n}\nEasymode.propTypes = {\n  sideSelect: PropTypes.number.isRequired,\n  urlSearch: PropTypes.string.isRequired,\n  pairCount: PropTypes.number.isRequired,\n  setCurrentPairCount: PropTypes.func.isRequired,\n  currentPairCount: PropTypes.number.isRequired,\n  setPairCount: PropTypes.func.isRequired,\n};\nexport default Easymode;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Css/GameBoard.css';\nimport Easymode from './Easymode';\n\nfunction GameBoard({\n  sideSelect,\n  urlSearch,\n  pairCount,\n  setPairCount,\n  setGameBoard,\n  setEndPageIsDisplayed,\n}) {\n  const [currentPairCount, setCurrentPairCount] = React.useState(0);\n  function nexttLevel() {\n    if (pairCount < 12) {\n      setPairCount(pairCount + 3);\n      setCurrentPairCount(0);\n    } else {\n      setEndPageIsDisplayed(true);\n    }\n  }\n\n  function modalWin() {\n    return (\n      <>\n        <div className=\"ModalWin\">\n          <p className=\"Win\">Niveau complété, bien Joué ! 🧙🏽‍♂️ </p>\n          <button className=\"button\" type=\"button\" onClick={() => { setGameBoard(false); }}>Accueil</button>\n          <button className=\"button\" type=\"button\" onClick={nexttLevel}>Niveau Suivant</button>\n        </div>\n      </>\n    );\n  }\n  return (\n    <>\n      <span className=\"pairMatched\">\n        Pairs:\n        {' '}\n        {currentPairCount}\n        {' '}\n        sur\n        {' '}\n        {pairCount}\n      </span>\n\n      { currentPairCount === pairCount && (\n        modalWin()\n      )}\n\n      <div className=\"Gameboard\">\n        { currentPairCount !== pairCount && (\n        <Easymode\n          sideSelect={sideSelect}\n          urlSearch={urlSearch}\n          pairCount={pairCount}\n          setCurrentPairCount={setCurrentPairCount}\n          currentPairCount={currentPairCount}\n          setPairCount={setPairCount}\n        />\n        )}\n      </div>\n    </>\n  );\n}\nGameBoard.propTypes = {\n  sideSelect: PropTypes.number.isRequired,\n  urlSearch: PropTypes.string.isRequired,\n  pairCount: PropTypes.number.isRequired,\n  setPairCount: PropTypes.func.isRequired,\n  setGameBoard: PropTypes.func.isRequired,\n  setEndPageIsDisplayed: PropTypes.func.isRequired,\n};\n\nexport default GameBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GameBoard from './GameBoard';\nimport './Css/Home.css';\n\nfunction Home({\n  sideSelect,\n  setSideSelect,\n  gameBoard,\n  setGameBoard,\n  setEndPageIsDisplayed,\n}) {\n  const sideSelectMap = {\n    1: 'Roman%20Empire',\n    2: 'Egypt',\n  };\n  const [buttonRomanClicked, setButtonRomanClicked] = React.useState(false);\n  const [buttonEgyptClicked, setButtonEgyptClicked] = React.useState(false);\n\n  function onClickButtonRoman() {\n    setSideSelect(1);\n    setButtonRomanClicked(!buttonRomanClicked);\n    setButtonEgyptClicked(false);\n  }\n\n  function onClickButtonEgypt() {\n    setSideSelect(2);\n    setButtonEgyptClicked(!buttonEgyptClicked);\n    setButtonRomanClicked(false);\n  }\n\n  const [pairCount, setPairCount] = React.useState(3);\n  function onChangePairCount(e) {\n    setPairCount(parseInt(e.target.value, 10));\n  }\n\n  function handleChangeBoolean() {\n    if (sideSelect != null) {\n      setGameBoard(!gameBoard);\n    } else {\n      alert('Choisis d\\'abord ton camp pour pouvoir jouer !');\n    }\n  }\n  if (gameBoard === true) {\n    return (\n      <GameBoard\n        sideSelect={sideSelect}\n        urlSearch={sideSelectMap[sideSelect]}\n        pairCount={pairCount}\n        setPairCount={setPairCount}\n        setGameBoard={setGameBoard}\n        setEndPageIsDisplayed={setEndPageIsDisplayed}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"side-select\">\n        <div className=\"side-camp\">\n          <div className=\"title-camp\">\n            <h2>Choisis ton camp</h2>\n          </div>\n          <div className=\"side-select-btn\">\n            <button type=\"button\" className={buttonRomanClicked ? 'btn-roman-clicked' : 'btn-roman'} onClick={onClickButtonRoman}>Romain</button>\n            <button type=\"button\" className={buttonEgyptClicked ? 'btn-egypt-clicked' : 'btn-egypt'} onClick={onClickButtonEgypt}>Egyptien</button>\n\n          </div>\n        </div>\n      </div>\n\n      <div className=\"btn-container\">\n        <div className=\"select-container\">\n\n          <select className=\"browser-default custom-select\" onChange={onChangePairCount}>\n            <option value={3}>Facile</option>\n            <option value={6}>Moyen</option>\n            <option value={9}>Difficile</option>\n            <option value={12}>Hardcore</option>\n          </select>\n\n        </div>\n        <div className=\"play-container\">\n          <button className=\"btn-play\" type=\"button\" onClick={handleChangeBoolean}>Play</button>\n        </div>\n      </div>\n    </>\n  );\n}\nHome.propTypes = {\n  setSideSelect: PropTypes.func.isRequired,\n  sideSelect: PropTypes.number.isRequired,\n  setEndPageIsDisplayed: PropTypes.func.isRequired,\n  gameBoard: PropTypes.bool.isRequired,\n  setGameBoard: PropTypes.func.isRequired,\n};\nexport default Home;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Css/Header.css';\n\nfunction ModalRules({ children }) {\n  const [isOpened, setIsOpened] = useState(false);\n  function changeState() {\n    setIsOpened(!isOpened);\n  }\n\n  if (isOpened === false) {\n    return <button type=\"button\" id=\"rules\" onClick={() => { setIsOpened(true); }}>Règles</button>;\n  }\n  return (\n    <div id=\"myModal\" className=\"modal\">\n      <div className=\"modal-content\">\n        {children}\n        <div id=\"card-button\" role=\"button\" aria-label=\"Close\" tabIndex=\"-1\" onKeyDown={changeState} onClick={changeState} className={changeState ? 'isOpened' : 'notOpened'} />\n      </div>\n    </div>\n  );\n}\n\nModalRules.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ModalRules;\n","export default __webpack_public_path__ + \"static/media/Baniere.950211cd.png\";","export default __webpack_public_path__ + \"static/media/BaniereRomain.43503a1a.png\";","export default __webpack_public_path__ + \"static/media/BaniereEgypte.f92993d5.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Css/Header.css';\nimport ModalRules from './ModalRules';\nimport BaniereDefault from './assets/Baniere.png';\nimport BaniereRomain from './assets/BaniereRomain.png';\nimport BaniereEgypte from './assets/BaniereEgypte.png';\n\nfunction Header({ logo, sideSelect, setGameBoard }) {\n  const baniereSelectMap = {\n    1: BaniereRomain,\n    2: BaniereEgypte,\n  };\n\n  function goHomePageButton() {\n    setGameBoard(false);\n  }\n\n  return (\n    <div className=\"header\">\n      <img className=\"Baniere\" src={baniereSelectMap[sideSelect] ?? BaniereDefault} alt=\"\" />\n      <div\n        className=\"bannerFlex\"\n        role=\"button\"\n        tabIndex=\"-1\"\n        onKeyDown={goHomePageButton}\n        onClick={goHomePageButton}\n      >\n        <img className=\"logo\" src={logo} alt=\"Age of Memory\" />\n      </div>\n      <div className=\"rulesButton\">\n        <div className=\"modal\">\n          <ModalRules>\n            <p className=\"rulestext\">\n              But du jeu :\n              <br />\n              Collecter des paires de cartes correspondantes.\n              <br />\n              <br />\n              L&apos;Egypte et L&apos;Empire Romain sont en guerre.\n              <br />\n              <br />\n              Choisissez votre camp !!!\n              <br />\n              <br />\n              Le thème du jeu ainsi que les cartes s\n              adapteront à votre choix.\n              <br />\n              <br />\n              Plusieurs niveaux de difficulté possible,\n              <br />\n              <br />\n              plus vous jouez en difficulté élevée,\n              <br />\n              plus vous gagnerez de points,\n              <br />\n              <br />\n              ainsi vous mettez toutes les chances de votre\n              côté pour faire gagner votre camp :\n              <br />\n              il y a 4 niveaux principaux de difficulté qui augmentent à\n              chaque fois que vous finissez une partie.\n              <br />\n              <br />\n              Exemple :\n              pour le niveau facile, vous débuterez\n              avec 3 paires de cartes, ensuite, 4, ensuite 5 etc...\n            </p>\n          </ModalRules>\n        </div>\n      </div>\n    </div>\n  );\n}\nHeader.propTypes = {\n  logo: PropTypes.string.isRequired,\n  sideSelect: PropTypes.number.isRequired,\n  setGameBoard: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport './Css/EndPage.css';\n\nfunction EndPage() {\n  return (\n    <>\n      <div className=\"end-text\">\n        <h1>\n          FÉLICITATIONS !\n          <br />\n          Vous avez terminé tous les niveaux.\n          <br />\n          Merci d&apos;avoir joué !\n        </h1>\n      </div>\n      <div className=\"names\">\n        <h3>Jeu conçu et réalisé par:</h3>\n        <br />\n        <a href=\"https://www.linkedin.com/in/marjorie-thomassin-b8659a193/\" target=\"_blank\" rel=\"noreferrer\">Marjorie</a>\n        {' '}\n        <a href=\"https://www.linkedin.com/in/pascal-joly-a62a23196/\" target=\"_blank\" rel=\"noreferrer\">Pascal</a>\n        {' '}\n        <a href=\"https://www.linkedin.com/in/denis-machet-a29330209/\" target=\"_blank\" rel=\"noreferrer\">Denis</a>\n        {' '}\n        <a href=\"https://www.linkedin.com/in/thomas-dufour-28763b144/\" target=\"_blank\" rel=\"noreferrer\">Thomas</a>\n        {' '}\n        <a href=\"https://www.linkedin.com/in/brian-bertili-622b86188/\" target=\"_blank\" rel=\"noreferrer\">Brian</a>\n\n      </div>\n    </>\n  );\n}\n\nexport default EndPage;\n","import React from 'react';\nimport logo from './components/assets/logo.png';\nimport './App.css';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport EndPage from './components/EndPage';\n\nfunction App() {\n  const [sideSelect, setSideSelect] = React.useState();\n  const [endPageIsDisplayed, setEndPageIsDisplayed] = React.useState(false);\n  const [gameBoard, setGameBoard] = React.useState(false);\n  if (endPageIsDisplayed === true) {\n    return (\n      <>\n        <Header sideSelect={sideSelect} logo={logo} setGameBoard={setGameBoard} />\n        <EndPage />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Header\n        sideSelect={sideSelect}\n        logo={logo}\n        gameBoard={gameBoard}\n        setGameBoard={setGameBoard}\n      />\n      <Home\n        setSideSelect={setSideSelect}\n        sideSelect={sideSelect}\n        endPageIsDisplayed={endPageIsDisplayed}\n        setEndPageIsDisplayed={setEndPageIsDisplayed}\n        gameBoard={gameBoard}\n        setGameBoard={setGameBoard}\n      />\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}